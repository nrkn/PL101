( begin
  ( define map
    '(
      "####  ####"
      "#  ####  #"
      "#        #"
      "##      ##"
      " #      # "
      " #      # "
      "##      ##"
      "#        #"
      "#  ####  #"
      "####  ####"
    )
  )   

  ( define position
    ( hash 
      ( x 2 )
      ( y 2 )
    )
  )
  
  ( define modifiers 
    ( hash
      ( up  
        ( hash
          ( x 0 )
          ( y -1 )
        )
      )
      ( down  
        ( hash
          ( x 0 )
          ( y 1 )
        )
      )
      ( left  
        ( hash
          ( x -1 )
          ( y 0 )
        )
      )
      ( right  
        ( hash
          ( x 1 )
          ( y 0 )
        )
      )
      ( none
        ( hash
          ( x 0 )
          ( y 0 )
        )
      )
    )
  ) 
  
  ( define update-map 
    ( lambda ( position c ) 
      ( begin
        ( define row ( lookup map ( lookup position 'y ) ) )
        ( update row ( ( lookup position 'x ) c ) )
      )
    )
  )  
  
  ( define modify-position
    ( lambda ( position direction ) 
      ( begin
        ( define modifier 
          ( lookup modifiers direction ) 
        )
        ( hash 
          ( x ( + ( lookup position 'x ) ( lookup modifier 'x ) ) )
          ( y ( + ( lookup position 'y ) ( lookup modifier 'y ) ) )
        )        
      )        
    )
  )
  
  ( define get-cell
    ( lambda ( position )
      ( lookup ( lookup map ( lookup position 'y ) ) ( lookup position 'x ) )
    )
  )
  
  ( define move
    ( lambda ( direction )
      ( begin
        ( define new-position 
          ( modify-position position direction )
        )
        
        ( update-map position #\space )        
        ( if ( = ( get-cell new-position ) #\space )
          ( update position 
            ( 'x ( lookup new-position 'x ) )
            ( 'y ( lookup new-position 'y ) )
          )            
        )       
        ( update-map position #\@ )    
        
        ( out ( join map #\linefeed ) )
      )
    )
  ) 
  ( move 'none )
)